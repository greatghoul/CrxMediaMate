import { airbnbClient } from './airbnb.js';

// 导入 IndexedDB 服务
import { IndexedDBService } from './indexedDBService.js';

// Initialize context menu
chrome.runtime.onInstalled.addListener(() => {
  chrome.contextMenus.create({
    id: "saveImage",
    title: "保存沙雕图",
    contexts: ["image"]
  });
  
  chrome.contextMenus.create({
    id: "openGallery",
    title: "打开图片库",
    contexts: ["action"]
  });
});

// Handle extension icon click
chrome.action.onClicked.addListener((tab) => {
  // Open a new tab with our newtab.html
  const newTabUrl = chrome.runtime.getURL("newtab.html");
  chrome.tabs.create({ url: newTabUrl });
});

// Handle context menu clicks
chrome.contextMenus.onClicked.addListener((info, tab) => {
  if (info.menuItemId === "saveImage") {
    // Open popup with the selected image
    const popupUrl = chrome.runtime.getURL("popup.html") + `?imageUrl=${encodeURIComponent(info.srcUrl)}`;
    chrome.windows.create({
      url: popupUrl,
      type: "popup",
      width: 500,
      height: 600
    });
  } else if (info.menuItemId === "openGallery") {
    // Open gallery page in a new tab
    const galleryUrl = chrome.runtime.getURL("gallery.html");
    chrome.tabs.create({ url: galleryUrl });
  }
});

// Handle messages from popup.js
chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {
  if (request.action === "createRecord") {
    // 同时保存到 Airtable 和本地 IndexedDB
    createRecordAndSaveLocally(request.data, (progress) => {
      // 发送进度更新
      if (sender && sender.tab) {
        chrome.tabs.sendMessage(sender.tab.id, { progress });
      } else {
        chrome.runtime.sendMessage({ progress });
      }
    })
      .then((result) => {
        sendResponse({ success: true, result });
      })
      .catch((error) => {
        console.error("Error creating record:", error);
        sendResponse({ success: false, error: error.message });
      });
    
    return true;
  } else if (request.action === "queryRecords") {
    queryRecords()
      .then((records) => {
        sendResponse({ success: true, records });
      })
      .catch((error) => {
        console.error("Error querying records:", error);
        sendResponse({ success: false, error: error.message });
      });
    
    return true;
  } else if (request.action === "finishRecords") {
    finishRecords(request.recordIds)
      .then(() => {
        sendResponse({ success: true });
      })
      .catch((error) => {
        console.error("Error finishing records:", error);
        sendResponse({ success: false, error: error.message });
      });
    
    return true;
  } else if (request.action === "saveToGallery") {
    // 直接保存到本地 IndexedDB
    saveImageToIndexedDB(request.data)
      .then(() => {
        sendResponse({ success: true });
      })
      .catch((error) => {
        console.error("Error saving to IndexedDB:", error);
        sendResponse({ success: false, error: error.message });
      });
    
    return true;
  }
});

// 同时保存到 Airtable 和 IndexedDB
async function createRecordAndSaveLocally(data, progressCallback) {
  try {
    // 首先下载图片
    progressCallback("下载图片中...");
    const imageResponse = await fetch(data.imageUrl);
    const imageBlob = await imageResponse.blob();
    
    // 保存到 Airtable
    progressCallback("保存到 Airtable...");
    const airtableResult = await createRecord(data, imageBlob, progressCallback);
    
    // 保存到 IndexedDB
    progressCallback("保存到本地图库...");
    await saveImageToIndexedDB({
      imageUrl: data.imageUrl,
      note: data.note,
      blob: imageBlob
    });
    
    return airtableResult;
  } catch (error) {
    console.error("Error in createRecordAndSaveLocally:", error);
    throw error;
  }
}

// 保存图片到 IndexedDB
async function saveImageToIndexedDB(data) {
  try {
    // 如果传入的是 URL 而不是 Blob，先下载图片
    let imageBlob = data.blob;
    if (!imageBlob && data.imageUrl) {
      const response = await fetch(data.imageUrl);
      imageBlob = await response.blob();
    }
    
    if (!imageBlob) {
      throw new Error("No image data provided");
    }
    
    // 保存到 IndexedDB
    await IndexedDBService.addImage(
      imageBlob,                 // 图片数据
      data.note || "未命名",      // 描述
      false                      // 默认未发布
    );
    
    return true;
  } catch (error) {
    console.error("Error saving to IndexedDB:", error);
    throw error;
  }
}

// 以下是原来的 Airtable 相关功能

async function queryRecords() {
  try {
    const records = await airbnbClient.listRecords();
    return records.map(record => ({
      id: record.id,
      description: record.fields.描述,
      imageUrl: record.fields.图片?.[0]?.url
    }));
  } catch (error) {
    console.error("Error querying records:", error);
    throw error;
  }
}

async function finishRecords(recordIds) {
  try {
    // 实现标记记录为已完成的功能
    // ...
    return true;
  } catch (error) {
    console.error("Error finishing records:", error);
    throw error;
  }
}

async function createRecord(data, imageBlob, progressCallback) {
  try {
    // 实现创建记录的功能
    // ...
    return { success: true };
  } catch (error) {
    console.error("Error creating record:", error);
    throw error;
  }
}
